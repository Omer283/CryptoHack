from Crypto.Cipher import AES
import hashlib
import random
import codecs
from convert_utils import *
from Crypto.Util.number import getPrime, inverse, bytes_to_long, long_to_bytes
ct = "c92b7734070205bdf6c0087a751466ec13ae15e6f1bcdd3f3a535ec0f4bbae66"


def decrypt(ciphertext, password_hash):
    ciphertext = bytes.fromhex(ciphertext)
    key = password_hash
    if len(key) % 8 != 0 and len(key) > 8:
        return "hi"
    cipher = AES.new(key, AES.MODE_ECB)
    try:
        decrypted = cipher.decrypt(ciphertext)
    except ValueError as e:
        return {"error": str(e)}

    return {"plaintext": decrypted.hex()}

with open('words', 'r') as f:
    l = f.read().split('\n')
    for w in l:
        m = decrypt(ct, hashlib.md5(w.encode()).digest())
        if "plaintext" in m.keys():
            t = hex_to_bytes(m["plaintext"])
            try:
                u = t.decode()
                if u.startswith('crypto'):
                    print(u)
                    print(w)
                    break
            except:
                continue

